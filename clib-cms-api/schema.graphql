"""
Autogenerated input type of AddNew
"""
input AddNewInput {
  claim: JSON!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cocs: [String!]!
  employeeId: String!
}

"""
Autogenerated return type of AddNew
"""
type AddNewPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

type AreaCode {
  branches: [Branch!]!
  id: ID!
  name: String!
}

type Benefits {
  amount: String!
  benefitTypeName: String
  code: String!
}

type Branch {
  code: String!
  id: ID!
  name: String!
}

type Claim {
  amountSettled: String
  benefits: [Benefits!]
  branchCode: String
  claimReferenceNo: String
  claimant: String
  claimantContactNo: String
  claimantRelationship: String
  claimsStatus: String
  cocs: [String!]
  dateFiled: String
  dateOfLoss: String
  dateOfNotification: String
  displayStatus: String
  internalClaimsStatus: String
  nextStatus: [String!]
  payoutBranch: String
  payoutReferenceNumber: String
  previousStatus: [String!]
  processingRestrictions: [JSON!]
  remarks: String
}

type ClaimDetails {
  benefit: String
  branchCode: String
  claimStatus: String
  claimant: String
  claimantContactNumber: String
  claimantRelationship: String
  claimsReferenceNumber: String
  customerNo: String
  dateFiled: String
}

type ClaimsCollection {
  claims: [ClaimDetails!]!
  totalResult: String
}

type Coc {
  active: String
  address: String
  beneficiaryBirthday: String
  beneficiaryContactNo: String
  beneficiaryName: String
  beneficiaryRelationship: String
  categoryCode: String
  city: String
  cocNumber: String
  effectiveDate: String
  expiryDate: String
  guardianBirthday: String
  issueDate: String
  paid: String
  partnerCode: String
  platformName: String
  productCode: String
  providerCode: String
  referenceNumber: String
  zipCode: String
}

"""
Autogenerated input type of CreateAdmin
"""
input CreateAdminInput {
  areaCode: String
  attributes: UserAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  region: String
}

"""
Autogenerated return type of CreateAdmin
"""
type CreateAdminPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  user: User
}

type Customer {
  address: String
  city: String
  civilStatus: String
  dateOfBirth: String
  emailAddress: String
  firstName: String
  fullname: String
  gender: String
  insuranceCustomerNo: String
  landline: String
  lastName: String
  middleName: String
  mobileNumber: String
  nationality: String
  natureOfWork: String
  placeOfBirth: String
  sourceOfFunds: String
  validIdNumber: String
  validIdPresented: String
  zipCode: String
}

type CustomerCoc {
  cocs: [Coc!]!
  customer: Customer!
}

"""
Autogenerated input type of DeleteAdmin
"""
input DeleteAdminInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: String!
}

"""
Autogenerated return type of DeleteAdmin
"""
type DeleteAdminPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  user: User
}

"""
Autogenerated input type of DeleteDocument
"""
input DeleteDocumentInput {
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
  submittedDocuments: [JSON!]!
}

"""
Autogenerated return type of DeleteDocument
"""
type DeleteDocumentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

type Designation {
  id: ID!
  name: String!
  value: String!
}

type Document {
  requiredDocuments: [String!]!
  submittedDocuments: [SubmittedDocument!]!
}

"""
Autogenerated input type of ForgetPassword
"""
input ForgetPasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String
}

"""
Autogenerated return type of ForgetPassword
"""
type ForgetPasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  user: User
}

"""
Represents untyped JSON
"""
scalar JSON

"""
Autogenerated input type of Login
"""
input LoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  password: String!
  username: String!
}

"""
Autogenerated return type of Login
"""
type LoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  exp: String
  token: String
  user: User
}

type Mutation {
  addNewClaim(
    """
    Parameters for AddNew
    """
    input: AddNewInput!
  ): AddNewPayload
  createAdmin(
    """
    Parameters for CreateAdmin
    """
    input: CreateAdminInput!
  ): CreateAdminPayload
  deleteAdmin(
    """
    Parameters for DeleteAdmin
    """
    input: DeleteAdminInput!
  ): DeleteAdminPayload
  deleteDocument(
    """
    Parameters for DeleteDocument
    """
    input: DeleteDocumentInput!
  ): DeleteDocumentPayload
  forgetPassword(
    """
    Parameters for ForgetPassword
    """
    input: ForgetPasswordInput!
  ): ForgetPasswordPayload
  login(
    """
    Parameters for Login
    """
    input: LoginInput!
  ): LoginPayload
  updateAdmin(
    """
    Parameters for UpdateAdmin
    """
    input: UpdateAdminInput!
  ): UpdateAdminPayload
  updateClaimBenefits(
    """
    Parameters for UpdateBenefits
    """
    input: UpdateBenefitsInput!
  ): UpdateBenefitsPayload
  updateClaimCocs(
    """
    Parameters for UpdateCoc
    """
    input: UpdateCocInput!
  ): UpdateCocPayload
  updateClaimDetails(
    """
    Parameters for UpdateDetails
    """
    input: UpdateDetailsInput!
  ): UpdateDetailsPayload
  updateClaimStatus(
    """
    Parameters for UpdateStatus
    """
    input: UpdateStatusInput!
  ): UpdateStatusPayload
  updatePassword(
    """
    Parameters for UpdatePassword
    """
    input: UpdatePasswordInput!
  ): UpdatePasswordPayload
  updateUploadDocument(
    """
    Parameters for UpdateUploadDocument
    """
    input: UpdateUploadDocumentInput!
  ): UpdateUploadDocumentPayload
  uploadDocument(
    """
    Parameters for UploadDocument
    """
    input: UploadDocumentInput!
  ): UploadDocumentPayload
}

type Query {
  """
  ApprovedByInsurer
  """
  approvedByInsurerClaims(limit: String!, page: String!): ClaimsCollection

  """
  Return all branches
  """
  branches: [Branch!]!

  """
  Get all branches
  """
  getBranches(limit: String!, page: String!): [Branch!]

  """
  Get claim documents via claim_references_no
  """
  getClaimDocuments(claimReferenceNo: String!): Document!

  """
  Get customer claims via customer_no
  """
  getCustomerClaims(customerNo: String!, limit: String!, page: String!): [Claim!]!

  """
  Get customer coc list via customer_no
  """
  getCustomerCocList(customerNo: String!, limit: String!, page: String!): CustomerCoc!

  """
  Get customer info via firstname middlename lastname and dob
  """
  getCustomerInfo(dateOfBirth: String!, firstName: String!, lastName: String!, middleName: String!): Customer!

  """
  InsurerApprovalClaims
  """
  insurerApprovalClaims(limit: String!, page: String!): ClaimsCollection

  """
  Current user
  """
  me: User!

  """
  PendingRequirements
  """
  pendingRequirementsClaims(limit: String!, page: String!): ClaimsCollection

  """
  ProcessingClaims
  """
  processingClaims(limit: String!, page: String!): ClaimsCollection

  """
  ReadyForReleaseClaims
  """
  readyForReleaseClaims(limit: String!, page: String!): ClaimsCollection

  """
  Return all regions area_codes and branches
  """
  regions: [Region!]!

  """
  ReportedClaims
  """
  reportedClaims(limit: String!, page: String!): ClaimsCollection

  """
  Get all customer via search text
  """
  searchCustomerList(limit: String!, page: String!, search: String!): [Customer!]

  """
  Return specific data for section units
  """
  sectionUnit(id: String!): SectionUnit!

  """
  Return all section units
  """
  sectionUnits: [SectionUnit!]!

  """
  Find user admin
  """
  showAdmin(id: String!): User

  """
  Find all users
  """
  users: [User!]!
}

type Region {
  areaCode: AreaCode!
  areaCodes: [AreaCode!]!
  id: ID!
  name: String!
}

type SectionUnit {
  designations: [Designation!]!
  id: ID!
  name: String!
  value: String!
}

type SubmittedDocument {
  documentName: String!
  fileImage: String!
  fileName: String!
  fileType: String!
}

"""
Autogenerated input type of UpdateAdmin
"""
input UpdateAdminInput {
  areaCode: String
  attributes: UserAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: String!
  region: String
}

"""
Autogenerated return type of UpdateAdmin
"""
type UpdateAdminPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  user: User
}

"""
Autogenerated input type of UpdateBenefits
"""
input UpdateBenefitsInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
}

"""
Autogenerated return type of UpdateBenefits
"""
type UpdateBenefitsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of UpdateCoc
"""
input UpdateCocInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cocs: [String!]!
  employeeId: String!
}

"""
Autogenerated return type of UpdateCoc
"""
type UpdateCocPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of UpdateDetails
"""
input UpdateDetailsInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
}

"""
Autogenerated return type of UpdateDetails
"""
type UpdateDetailsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of UpdatePassword
"""
input UpdatePasswordInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  newPassword: String
  oldPassword: String
  passwordConfirmation: String
}

"""
Autogenerated return type of UpdatePassword
"""
type UpdatePasswordPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  user: User
}

"""
Autogenerated input type of UpdateStatus
"""
input UpdateStatusInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
}

"""
Autogenerated return type of UpdateStatus
"""
type UpdateStatusPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of UpdateUploadDocument
"""
input UpdateUploadDocumentInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
  submittedDocuments: [JSON!]!
}

"""
Autogenerated return type of UpdateUploadDocument
"""
type UpdateUploadDocumentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

"""
Autogenerated input type of UploadDocument
"""
input UploadDocumentInput {
  claims: JSON!
  claimsReferenceNo: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  employeeId: String!
  submittedDocuments: [JSON!]!
}

"""
Autogenerated return type of UploadDocument
"""
type UploadDocumentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  data: String
  errors: [String!]
  message: String
}

type User {
  designation: String!
  email: String!
  employeeId: String!
  fullname: String!
  id: ID!
  immediateHead: String!
  isTemporaryPassword: Boolean!
  region: Region!
  sectionUnit: String!
  username: String!
}

"""
Attributes for creating or updating a user
"""
input UserAttributes {
  designation: String
  email: String!
  employeeId: String!
  fullname: String!
  immediateHead: String!
  sectionUnit: String!
  username: String!
}